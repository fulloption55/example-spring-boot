<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>example-spring-boot</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>

    <name>example-spring-boot</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.3.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <rpm.username>tomcat</rpm.username>
        <rpm.groupname>tomcat</rpm.groupname>
        <tomcat-server-version>7.0.64</tomcat-server-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring-boot.version>1.3.3.RELEASE</spring-boot.version>
        <powermock.version>1.6.4</powermock.version>
        <cobertura.version>2.7</cobertura.version>
        <rpm-maven-plugin.version>2.1.5</rpm-maven-plugin.version>
        <http-component.version>4.5.2</http-component.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-redis</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring-boot.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${http-component.version}</version>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura.version}</version>
                <configuration>
                    <instrumentation>
                        <excludes>
                            <exclude>com/example/ExampleSpringBootApplication.class</exclude>
                        </excludes>
                    </instrumentation>
                    <check>
                        <totalLineRate>70</totalLineRate>
                    </check>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>${rpm-maven-plugin.version}</version>
                <configuration>
                    <license>2016, Fulloption Inc.</license>
                    <group>development</group>
                    <description>${project.artifactId} rpm</description>
                    <defaultDirmode>775</defaultDirmode>
                    <defaultFilemode>664</defaultFilemode>
                    <defaultUsername>${rpm.username}</defaultUsername>
                    <defaultGroupname>${rpm.groupname}</defaultGroupname>
                    <defineStatements>
                        <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                    </defineStatements>
                    <mappings>
                        <mapping>
                            <directory>/opt/apache-tomcat/apache-tomcat-${tomcat-server-version}/webapps/</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/${project.artifactId}-${project.version}.war
                                    </location>
                                </source>
                            </sources>
                            <filemode>774</filemode>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <script>
                            rm -rf
                            /opt/apache-tomcat/apache-tomcat-${tomcat-server-version}/webapps/${project.artifactId}-${project.version}*
                        </script>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <script>
                            mv
                            /opt/apache-tomcat/apache-tomcat-${tomcat-server-version}/webapps/${project.artifactId}-${project.version}.war
                            /opt/apache-tomcat/apache-tomcat-${tomcat-server-version}/webapps/${project.artifactId}.war
                        </script>
                    </postinstallScriptlet>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-rpm</id>
                        <phase>package</phase>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>generate-code-coverage-report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>


</project>
